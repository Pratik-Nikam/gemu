"""
Django settings for plaxed project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# Heroku: Deployment guide
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','plxapp.herokuapp.com']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Easy Thumbnails
    'easy_thumbnails',
    # Bootstrap 3: Installation
    # https://django-bootstrap3.readthedocs.io/en/latest/installation.html#installation
    'bootstrap3',
    # System APPS
    'core.apps.CoreConfig',
    'userprofile.apps.UserProfileConfig',
    'posts.apps.PostsConfig',
    'posts.templatetags.custom_filters',
    # Django AllAuth: Providers
    # http://django-allauth.readthedocs.io/en/latest/installation.html#django
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.twitch',
    'allauth.socialaccount.providers.battlenet',
]

# Django AllAuth: Providers
# http://django-allauth.readthedocs.io/en/latest/installation.html#django
SITE_ID = 2

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'plaxed.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'plaxed.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Bogota'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Heroku: Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOGIN_REDIRECT_URL = 'timeline'

# Heroku: Update database configuration with $DATABASE_URL.
import dj_database_url
db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)

# Heroku: Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

THUMBNAIL_TRANSPARENCY_EXTENSION = 'png'

THUMBNAIL_ALIASES = {
    '': {
        'post': {'size': (555, 0), 'crop': 'smart', 'upscale' : True},
        'header': {'size': (1170, 350), 'crop': 'smart', 'upscale' : True},
        'avatar': {'size': (200, 200), 'crop': 'smart', 'upscale' : True},
        'avatar_thumb': {'size': (50, 50), 'crop': 'smart', 'upscale' : True},
    },
}

# Django AllAuth
# http://django-allauth.readthedocs.io/en/latest/installation.html#django
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
TEMPLATE_LOADERS = [ 
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
]
SOCIALACCOUNT_PROVIDERS = {
    "twitch": {"SCOPE": ["user_read"]},
}
# Django-Allauth: Battle.net Solution
# https://github.com/pennersr/django-allauth/pull/1648
#ACCOUNT_USERNAME_VALIDATORS = ['allauth.socialaccount.providers.battlenet.validators.BattletagUsernameValidator'] - In Progress
ACCOUNT_USERNAME_VALIDATORS = ['plaxed.validators.username_validators']

# Django-Boostrap3
# https://django-bootstrap3.readthedocs.io/en/latest/settings.html
BOOTSTRAP3 = {
    # The complete URL to the Bootstrap CSS file (None means derive it from base_url)
    'css_url': '\static/css/bootstrap.min.css',
}